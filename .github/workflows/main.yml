
# name: ci

on: 
  push:
    branches:
      - "main"

# jobs:
#   build-and-run:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Add API_KEY from Secrets
#         run: |
#           touch .env
#           echo "${{ secrets.ENV_FILE }}" >> .env
#       - uses: isbang/compose-action@v1.5.1
#         with:
#           compose-file: "./compose.yml"
jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Add API_KEY from Secrets
        run: |
          touch .env
          echo "${{ secrets.ENV_FILE }}" >> .env
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker Images
        run: docker compose build -d
        shell: bash
      # - name: Build and Push Docker Images
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_name }}:latest
      #     matrix:
      #       image_name:
      #         - tubescope-backend
      #         - tubescope-frontend
      #       dockerfile:
      #         - ./backend/Dockerfile
      #         - ./frontend/Dockerfile
      - name: Compose Up
        run: docker compose up -d
        shell: bash
      - name: Push backend
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tubescope-backend:latest
      - name: Push frontend
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tubescope-frontend:latest




# name: ci

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Checkout
#         uses: actions/checkout@v4
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       -
#         name: Build and push backend
#         uses: docker/build-push-action@v5
#         with:
#           context: ./backend
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
#       - name: Trigger Main Tubescope Workflow
#         if: ${{ success() }}
#         run: |
#           curl -X POST \
#             -H "Authorization: token ${{ secrets.PAT }}" \
#             -H "Accept: application/vnd.github.v3+json" \
#             https://api.github.com/repos/yur0n/tubescope/dispatches \
#             -d '{"event_type": "do-workflow"}'
   

# name: ci

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Checkout
#         uses: actions/checkout@v4
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       -
#         name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
#       - name: Trigger Main Tubescope Workflow
#         if: ${{ success() }}
#         run: |
#           curl -X POST \
#             -H "Authorization: token ${{ secrets.PAT }}" \
#             -H "Accept: application/vnd.github.v3+json" \
#             https://api.github.com/repos/yur0n/tubescope/dispatches \
#             -d '{"event_type": "do-workflow"}'

# jobs:
#   build-and-run:
#     runs-on: ubuntu-latest
#     steps:
#       - 
#         uses: actions/checkout@v4
#       - 
#         uses: isbang/compose-action@v1.5.1
#         with:
#           compose-file: "./compose.yml"
#       - 
#         name: Add SSH key to ssh-agent
#         run: |
#           echo "${{ secrets.DEPLOY_KEY }}" > deploy_key
#           chmod 600 deploy_key
#           eval "$(ssh-agent -s)"
#           ssh-add deploy_key
#       - 
#         name: Deploy to server
#         if: ${{ success() }}
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "docker-compose -f /path/to/docker-compose.yml down"
#           scp docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/path/to/docker-compose.yml
#           ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "docker-compose -f /path/to/docker-compose.yml up -d"
